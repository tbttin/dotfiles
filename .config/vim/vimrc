" xdg-base-dir configurations, source: arch linux.
set undodir=$XDG_DATA_HOME/vim/undo
set directory=$XDG_DATA_HOME/vim/swap
set backupdir=$XDG_DATA_HOME/vim/backup
set viminfo+='1000,n$XDG_DATA_HOME/vim/viminfo
set runtimepath=$XDG_CONFIG_HOME/vim,$VIMRUNTIME,$XDG_CONFIG_HOME/vim/after

" Cursor settings:
"   1 -> blinking block
"   2 -> solid block 
"   3 -> blinking underscore
"   4 -> solid underscore
"   5 -> blinking vertical bar
"   6 -> solid vertical bar
" Mode Settings
let &t_SI.="\e[3 q" "SI = INSERT mode
let &t_SR.="\e[4 q" "SR = REPLACE mode
let &t_EI.="\e[1 q" "EI = NORMAL mode (ELSE)

" Always refer to the relevant :help before adding anything to vimrc.
" Using short names has ONLY cons and ZERO pros.
set number relativenumber

" Increamental search, while typing a search command, show where the pattern.
set incsearch
" Highlight search.
set hlsearch

" Show the (partial) command in the last line of screen.
set showcmd

" Detect type of file.
filetype on             

" Enable syntax highlighting.
syntax enable

" Set auto-indenting on for programming.
set autoindent
"set shiftwidth=4
 
" Load indent file for specific file type.
filetype indent on      

" Enabling filetype support provides filetype-specific indenting,
" syntax highlighting, omni-completion and other useful settings.
"filetype plugin indent on

" Decrease ESC delay.
set timeoutlen=1000 ttimeoutlen=0

" Keep 3 lines when scrolling.
set scrolloff=3        

" `matchit.vim` is built-in so let's enable it!
" Hit `%` on `if` to jump to `else`.
"runtime macros/matchit.vim

" various settings
"set autoindent                 " Minimal automatic indenting for any filetype.
"set backspace=indent,eol,start " Proper backspace behavior.
"set hidden                     " Possibility to have more than one unsaved buffers.
"set incsearch                  " Incremental search, hit `<CR>` to stop.
"set ruler                      " Shows the current line number at the bottom-right
                                " of the screen.
"set wildmenu                   " Great command-line completion, use `<Tab>` to move
                                " around and `<CR>` to validate.

" jump to the last position when reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g'\"" | endif
endif
