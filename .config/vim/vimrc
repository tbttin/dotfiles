" xdg-base-dir configurations, source: Arch linux.
set undodir=$XDG_DATA_HOME/vim/undo
set directory=$XDG_DATA_HOME/vim/swap
set backupdir=$XDG_DATA_HOME/vim/backup
set viewdir=$XDG_DATA_HOME/vim/view
set viminfo+='1000,n$XDG_DATA_HOME/vim/viminfo
set runtimepath=$XDG_CONFIG_HOME/vim,$VIMRUNTIME,$XDG_CONFIG_HOME/vim/after

if exists("*mkdir")
    if !isdirectory(&undodir)   | call mkdir(&undodir, "p")   | endif
    if !isdirectory(&directory) | call mkdir(&directory, "p") | endif
    if !isdirectory(&backupdir) | call mkdir(&backupdir, "p") | endif
    if !isdirectory(&viewdir) 	| call mkdir(&viewdir, "p")   | endif
"    if !isdirectory($XDG_CONFIG_HOME . "/vim/after")
"	call mkdir($XDG_CONFIG_HOME . "/vim/after", "p")
"    endif
endif

" Cursor settings:
"   1 -> blinking block
"   2 -> solid block
"   3 -> blinking underscore
"   4 -> solid underscore
"   5 -> blinking vertical bar
"   6 -> solid vertical bar
" Mode Settings
let &t_SI.="\e[3 q" "SI = INSERT mode
let &t_SR.="\e[4 q" "SR = REPLACE mode
let &t_EI.="\e[1 q" "EI = NORMAL mode (ELSE)

" Always refer to the relevant :help before adding anything to vimrc.
" Using short names has ONLY cons and ZERO pros.
set number relativenumber

" While typing a search command, if match SHOW where the pattern.
set incsearch

" Show the (partial) command in the last line of screen.
set showcmd

" This makes typing Esc take effect more quickly.
set ttimeout
set ttimeoutlen=100

" Keep 3 lines when scrolling.
set scrolloff=3

" Command completion.
set wildmenu

" "@@@" is put in the last columns of the last screen line to indicate the rest of the line is not displayed.
set display=lastline

" Possibility to have more than one unsaved buffers.
"set hidden

" Filetype detection.
" Using filetype plugin files.
" Using indent files.
filetype plugin indent on

" Enable syntax highlighting.
syntax enable

" GNU style.
set shiftwidth=4
"set expandtab
set cinoptions+=t0,(0,f0.5s,{0.5s,0.5s},:0.5s,=0.5s
" function and variable declaration align?

" This plugin makes the "%" command jump to matching HTML tags, if/else/endif in Vim scripts, etc.
packadd! matchit

" Arrows? NO!
" in normal mode...
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>
" ...and in insert mode
inoremap <Left>  <ESC>:echoe "Use h"<CR>
inoremap <Right> <ESC>:echoe "Use l"<CR>
inoremap <Up>    <ESC>:echoe "Use k"<CR>
inoremap <Down>  <ESC>:echoe "Use j"<CR>

" Jump to the last position when reopening a file.
autocmd BufReadPost *
  \ if line("'\"") >= 1 && line("'\"") <= line("$") && &ft !~# 'commit'
  \ |   exe "normal! g`\""
  \ | endif
